#!/usr/bin/env node
var semver = require('semver');
if (!semver.gt(process.version, '6.0.0')) {
  require('babel-register');
}

const Program = require('commander');
const Pack = require('../package.json');
const Essentials = require('../src/essentials');
const LocalStorage = require('../src/local-storage');

/**
  CLI entry point.
 */

Program
  .version(Pack.version)
  .description(Pack.description);

Program
  .command('create [name]')
  .description('Creates a new Tortilla project with the provided name')
  .option('-o, --output [path]', 'The output path of the newly created project')
  .option('-m, --message [message]', 'The created project\'s initial commit\'s message')
  .option('--override', 'Override project directory if already exists')
  .action((name, options) => {
    Essentials.create(name, options);
  });

Program
  .command('init [name]')
  .description('Initializes Tortilla essentials in the provided project')
  .action((dir) => {
    const localStorage = dir ? LocalStorage.create(dir) : LocalStorage;
    localStorage.assertTortilla();
    Essentials.ensure(dir);
  });

Program
  .command('manual <command...>', 'Manage manual files')
  .command('step <command...>', 'Manage step commits history')
  .command('strict <command...>', 'Manage strict mode')
  .command('release <command...>', 'Manage tutorial releases')
  .command('submodule <command...>', 'Manage submodules');

Program.parse(process.argv);
